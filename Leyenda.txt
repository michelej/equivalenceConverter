##########################################################
    Excel - Equivalencias
##########################################################

Para representar las equivalencias se utilizara el formato JSON, en cada celda se incluira un texto con este formato.
    https://es.wikipedia.org/wiki/JSON


Funciones:
Las funciones disponibles para determinar las columnas del excel resultante.

- VALUE  
Sirve para representar una columna COMPLETA indicando una posicion inicial, normalmente seria una columna y un fila.
    col = columna
    below-text = Busca el texto en la columna indicada, y empieza desde la fila siguiente (+1).
    row = Empieza desda la fila indicada
    add-rows = se le suma a la fila la cantidad especificada.
    prepend = agrega al INICIO del valor el texto indicado.
    append = agrega al FINAL del valor el texto indicado.
    

{
    "value":{
        "col":"11",
        "below-text":"ISIN Codes"
    }
}

- CONSTANT
Sirve para indicar que la columna sera llenada con un valor constante.

{
    "constant":"100G"
}

- POSITION
Sirve para indicar que la columna sera llenada por un valor que se encuentra en el excel.
    row = Fila del excel
    col = Columna del excel

{
    "position":{
        "row":"2",
        "col":"3"
    }
}

- MATH
Representa una funciona matematica que se realizara en base a uno o mas valores que se encuentran en el excel, se representara por cada operando y una funcion a ejecutar.
    result = Representa la operacion matematica a realizara, se remplazaran los nombres de los operandos usados
    varX = Los operandos se pueden representar con valores comprendidos desde var1 hasta var99,   

{
    "math":{
        "var1":{
            "value":{
                "col":"11",
                "below-text":"Units in Issue"
            }
        },
        "var2":{
            "value":{
                "col":"15",
                "below-text":"Gross Rate"
            }
        },
        "result":"(var2*100)/var1"
    }
}

- DATE
Representaria una operacion realizada sobre una fecha en concreto.
En el caso de ser un excel y la fecha no estar en formato fecha se debe especificar el formato en el campo(format)
    transform = Indica la operacion a realizar ( addDays o subDays )
    quantity  = Cantidad de dias a modificar
    value,position = La columna con la fecha a modificar. ( Puede ser value o position)

{
    "date":{
        "transform":"addDays"
        "quantity":"2"
        "value":{
            "col":15,
            "below-text":"Date Starting"
        },
        "format":"x%-x%-x%"
    }
}


Validacion:

En el campo Validacion el fichero de equivalencias se puede indicar un filtro a aplicar, esto serviria para filtrar los datos del excel resultado en base a una columna y un valor dado
    column = La columna con la que se compara ( deberia ser siempre un tipo value)
    query  = El texto a comparar
    type   = El tipo de comparaci√≥n que vamos a hacer ( equal , diff)

{
    "filter":{
        "column":{
            "value":{
                "col":15,
                "below-text":"Share Class Type"
            }            
        },
        "query":"Accumulative"
        "type":"equal"
    }
}


###############################################################

Los espacios no importan, asi que lo siguiente equivale a lo mismo:

{"value":{"col":"17", "below-text":"ISIN"}}

{
	"value":{
	   "col":"17",
	   "below-text":"ISIN"
	}
}



%b: Returns the first three characters of the month name. In our example, it returned "Sep"
%d: Returns day of the month, from 1 to 31. In our example, it returned "15".
%Y: Returns the year in four-digit format. In our example, it returned "2018".
%H: Returns the hour. In our example, it returned "00".
%M: Returns the minute, from 00 to 59. In our example, it returned "00".
%S: Returns the second, from 00 to 59. In our example, it returned "00".
%a: Returns the first three characters of the weekday, e.g. Wed.
%A: Returns the full name of the weekday, e.g. Wednesday.
%B: Returns the full name of the month, e.g. September.
%w: Returns the weekday as a number, from 0 to 6, with Sunday being 0.
%m: Returns the month as a number, from 01 to 12.
%p: Returns AM/PM for time.
%y: Returns the year in two-digit format, that is, without the century. For example, "18" instead of "2018".
%f: Returns microsecond from 000000 to 999999.
%Z: Returns the timezone.
%z: Returns UTC offset.
%j: Returns the number of the day in the year, from 001 to 366.
%W: Returns the week number of the year, from 00 to 53, with Monday being counted as the first day of the week.
%U: Returns the week number of the year, from 00 to 53, with Sunday counted as the first day of each week.
%c: Returns the local date and time version.
%x: Returns the local version of date.
%X: Returns the local version of time.